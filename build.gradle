plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id "io.freefair.lombok" version "8.4"
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = 'me.axeno'
version = '0.0.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "axenoReleases"
        url = "https://mvn.axeno.me/releases/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT")
    implementation 'com.github.Revxrsal.Lamp:common:3.2.1'
    implementation 'com.github.Revxrsal.Lamp:bukkit:3.2.1'

    implementation("me.axeno.xernas:menulib:1.1.0")
    implementation("de.rapha149.signgui:signgui:2.5.0")

    compileOnly("org.jetbrains:annotations:24.0.1")
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.20")
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    build {
        dependsOn(shadowJar)
    }
}

shadowJar {
    destinationDirectory.set(file("builds"))
    archiveFileName = "Nexora.jar"
}

apply plugin: "com.github.johnrengelman.shadow"